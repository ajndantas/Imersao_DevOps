Tudo na GCP roda em torno de um projeto a ser criado.
O nosso √© o de nome ImersaoDevOpsAlura

- Necess√°rio adicionar cr√©ditos para serem utilizados em nosso projeto

Artifact Registries √© o "DockerHub" da Google. Um reposit√≥rio 

üîç O que s√£o Artifact Registries?
S√£o servi√ßos ou reposit√≥rios especializados onde artefatos 
compilados (outputs de build) s√£o armazenados para serem reutilizados em 
diferentes fases de um pipeline de CI/CD (Integra√ß√£o Cont√≠nua/Entrega Cont√≠nua).

 Por que usar Artifact Registries?

üìÅ Centraliza√ß√£o de depend√™ncias
üîê Controle de acesso e seguran√ßa
üè∑Ô∏è Versionamento de builds
‚ôªÔ∏è Reuso de artefatos entre ambientes
üöÄ Acelera√ß√£o de pipelines CI/CD
üìú Hist√≥rico de vers√µes para rollback

‚úÖ Casos de uso comuns
Publicar imagens Docker para serem usadas por outros servi√ßos.

# PARA PODER SE USAR O Artifact Registries √© necess√°rio fazer a instala√ß√£o do gcloud (https://cloud.google.com/sdk/docs/install#windows), que √© a CLI 
para rodar comandos de Google Cloud

Ao t√©rmino da instala√ß√£o, n√£o precisa iniciar o Google Cloud Shell, isso ser√° feito via VSCode

# AUTENTICANDO NO GOOGLE Cloud
gcloud auth login # AGORA SE FICA AUTENTICADO COM A CLI gcloud

# SELECIONANDO O MEU PROJETO
gcloud config set project PROJECT_ID # Nesse link, se obt√©m o project id. https://console.cloud.google.com/welcome?hl=pt-br&inv=1&invt=Ab15Zw&project=imersaodevopsalura)
gcloud config set project imersaodevopsalura

# FAZ O DEPLOY DA MINHA APLICA√á√ÉO NO CLOUDRUN

# O QUE √â O CLOUDRUN ? 
Em resumo, o Cloud Run:
Executa containers (como imagens Docker).

Escala automaticamente de 0 at√© N inst√¢ncias (inclusive zera quando n√£o h√° tr√°fego). # SERVERLESS

Funciona com HTTP(S) por padr√£o.

Gerenciado: o Google cuida da infraestrutura, balanceamento, escalonamento e seguran√ßa. # SERVERLESS

Baseado em eventos: ideal para APIs, webhooks, microservi√ßos, etc.

gcloud run deploy --port=8000
(venv) G:\Meu Drive\Cursos e Treinamentos\Cientista de Dados\Treinamento Python\Imersao DevOps Alura>gcloud run deploy --port=8000
Deploying from source. To deploy a container use [--image]. See https://cloud.google.com/run/docs/deploying-source-code for more details.
Source code location (G:\Meu Drive\Cursos e Treinamentos\Cientista de Dados\Treinamento Python\Imersao DevOps Alura):  

# NESSE PONTO O CLOUDRUN SOLICITA O DIRET√ìRIO DA MINHA APLICA√á√ÉO, COMO √â ESSE MESMO, BASTA DAR ENTER
Next time, you can use `--source .` argument to deploy the current directory.

Service name (imersaodevopsalura): api # INFORME AQUI O NOME DO SERVI√áO(CONTAINER), VAMOS COLOCAR API, COMO INFORMADO EM NOSSO docker compose 

The following APIs are not enabled on project [imersaodevopsalura]:
        artifactregistry.googleapis.com # SDK DO GOOGLE AONDE √â GUARDADA A IMAGEM
        cloudbuild.googleapis.com       # SDK DO GOOGLE QUE FAZ O BUILD DA IMAGEM
        run.googleapis.com              # SDK DO GOOGLE QUE COLOCA A APLICA√á√ÉO NO AMBIENTE SERVERLESS

# PRECISAMOS ATIVAR TODAS ESSAS APIs

Do you want enable these APIs to continue (this will take a few minutes)? (Y/n)?  y

Enabling APIs on project [imersaodevopsalura]...
Operation "operations/acf.p2-570342663148-9d46ce8e-5633-4052-88bd-8f2b0e9b4a44" finished successfully.
Please specify a region: # ESCOLHER A REGI√ÉO DE ATIVA√á√ÉO.

Please enter numeric choice or text value (must exactly match list item):  32

# CRIA√á√ÉO DO artifactregistry PARA ARMAZENAR OS CONTAINERS
To make this the default region, run `gcloud config set run/region southamerica-east1`.

Deploying from source requires an Artifact Registry Docker repository to store built containers. A repository named [cloud-run-source-deploy] in region [southamerica-east1] will be
 created.

Do you want to continue (Y/n)? y

# PERMITIR O ACESSO PARA QUALQUER PESSOA, SEM A NECESSIDADE DE AUTENTICA√á√ÉO
Allow unauthenticated invocations to [api] (y/N)? Y

# EXECUTANDO O BUILD
Building using Dockerfile and deploying container to Cloud Run service [api] in project [imersaodevopsalura] region [southamerica-east1]

  OK Creating Container Repository...
  /  Uploading sources...
  .  Building Container...
  .  Creating Revision...
  .  Routing traffic...
  .  Setting IAM Policy...



üí° Exemplo com Google Artifact Registry (Docker)

üõ†Ô∏è Pr√©-requisitos
Conta no Google Cloud

Projeto criado no GCP

SDK do Google Cloud instalado

https://cloud.google.com/sdk/docs/install

‚úÖ 1. Ativar o Artifact Registry no seu projeto

gcloud services enable artifactregistry.googleapis.com

‚úÖ 2. Criar um reposit√≥rio no Artifact Registry
Exemplo: reposit√≥rio Docker na regi√£o us-central1

gcloud artifacts repositories create meu-repo-docker \
  --repository-format=docker \
  --location=us-central1 \
  --description="Reposit√≥rio Docker para meus servi√ßos"

‚úÖ 3. Autenticar Docker com o Artifact Registry

gcloud auth configure-docker us-central1-docker.pkg.dev
Isso atualiza seu arquivo ~/.docker/config.json com as credenciais corretas para a regi√£o.

‚úÖ 4. Fazer push de uma imagem Docker para o reposit√≥rio
a. Crie a imagem localmente (ou use uma pronta)

docker build -t my-app .

b. Tag da imagem para o registry

docker tag my-app us-central1-docker.pkg.dev/SEU_PROJETO/meu-repo-docker/my-app:latest

c. Push para o registry
r
docker push us-central1-docker.pkg.dev/SEU_PROJETO/meu-repo-docker/my-app:latest

‚úÖ 5. Usar essa imagem em outros ambientes
Voc√™ pode referenciar essa imagem em um Dockerfile, Kubernetes (GKE), Cloud Run, etc.

Exemplo em GKE:

containers:
- name: meu-container
  image: us-central1-docker.pkg.dev/SEU_PROJETO/meu-repo-docker/my-app:latest

üîê Permiss√µes recomendadas
Para permitir que outros servi√ßos fa√ßam pull de imagens, a conta de servi√ßo precisa da permiss√£o:


roles/artifactregistry.reader

‚úÖ 6. (Opcional) Listar imagens no reposit√≥rio
gcloud artifacts docker images list us-central1-docker.pkg.dev/SEU_PROJETO/meu-repo-docker
